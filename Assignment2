1. Your client chipkart has a tig trillion day sale & the server has got a sudden spike of requests, you need to analyze the load appearing on server before it reaches the max limit, so that you can analyze within how much time you can scale out your infrastructure.
Find out the average load, server is taking here along with the free memory available.

Answer: 
We will be able to determine load average either by running the following commands 
# uptime 
eg. [root@localhost ~] # uptime
 8:22  up 6 days, 21:07, 4 users, load averages: 17.61 11.14 9.43
 Here first value depicts average load on cpu for last one minute, Second gives us the average load for the last 5-minute interval and The third value gives us the 15-minute average load
# top 
This tool gives us realtime Load average, CPU and process running information 

To check the free memory availabel we can use the following command 
# free -h 
# free -g 
Here options -h refers to display the values in MB and -g represents the values in GB 

2. During the nginx setup on the server, you have written your own custom config file, now you need to place this file in /etc/nginx/sites-available/ & /etc/nginx/sites-enabled/ directories. Also, after you move this config file in relevant directory(s), you also need to make sure that if you update your config file in /etc/nginx/sites-available/
It should get auto updated in /etc/nginx/sites-enabled/ directory without the need to manually update it.

Answer: 

To copy the customConfig file we created we can use the following command (if file is within the server)
# echo /etc/nginx/sites-available/ /etc/nginx/sites-enabled/ | xargs -n 1 cp customConfig 

To make the customConfig file updated whenever any change is made to it under "/etc/nginx/sites-available/" we can use a symbolic link. To link the two files under directory we can use the following  commands 
# ln -s /etc/nginx/sites-available/customConfig /etc/nginx/sites-enabled/customConfig

3. You are closely working with a developer to catch an error in the api call, so you are asked to monitor real time access logs of nginx webserver, this log file has a huge amount of data which you cannot risk to open all at once which might take time. Assuming recent data gets appended in the access log file, write your step to check the real time logs.

Answer: 

To access the realtime logs of nginx web server we can use the following command 
# tail -f /var/log/nginx.log 

here the option -f enables to dispaly last 10 lines of the file nginx.log and it displays the realtime logs. 
we can use the option -f as follows too to display 100 lines of real time logs 
# tail -f100 /var/log/nginx.log

4. You were running a django application server & you stopped the executing process & next time you went to start the app server, you found out that the port is already in use. What steps you will take to analyze the issue & then start the django app server

Answer: 

we can use netstat tool to determine the current ports which have ESTABLISHED, LISTENING, CLOSE_WAIT and multiple other states and determine whether the django application port is already in use or it is in listening state. Consider the django app is running on port 8086 then we have to run the follwing command 

# netstat -an |grep -i LISTENING |grep 8086 

Once we determine the process running with the specified port using ps or lsof command we can kill the associated PID and start the application back again 

# to find the process associated with port number run the follwing command 
# lsof -i :8086
to kill the associated PID use 
# kill -9 <PID>

5. Your server went down & your developer found that recent commit had a typo in the source code which had put the server down. Now you have to find the number of occurrences of that typo in the source code file without opening the file. Also, find the occurence of that typo with respect to line number of file.

Answer: 

To replace all the occurences of typo with correct keyword we can use the sed command to find and replace the text 
# sed -i 's/old-text/new-text/g' input.txt

***** searching for option to print the line number 

6. You had setup the server such as it runs as non-root user & you found out that your application server is not able to write logs to a specific file mentioned by developer in their source code, you found that file exists at the location, however it is not able to log into it. What would be your steps to find the issue & resolve it
Answer: 

We can either give read and write permission to the non-root user to the log file and parent directory via supplying permissions to others filed 
# chmod 646 appplication.log 

Or we can add the non-root user to a group and modify the group field permisson to the log file 
# groupadd application 
# usermod -G application nonrootuser 

7. You created a systemd service for running backend application program & you would like to check the logs of that service to know whether it failed & caused your application to stop.

Answer: 
 
 To check the systemd servie status we can use the follwoing command 
 # systemctl status servicename

 This will show the current status of the application and will display the log info even if the app is stopped or reloaded 


8. In your company, a developer is developing one app and it is based on Apache2 and he comes to you with an issue that the application he is developing not able generate the access logs. In this scenario which all thing you will check? Write the steps with commands that you will use to solve this.

Answer: 
First i will check if the file has read and write permissions for the specified user 
# ls -l <filename>
if it has the required permissons i will check if the user is owner of the log file if the user is not the owner, then we will check if there is a group with associated users and it has the required permissions. 
if this is all setup as expected, then we will check if the disk has enough space to write logs 
# df -h 
If further there are problems we have to check the app level logging 

9. Suppose you are working as a linux administrator in company and one of your production server which is running on aws and has linux OS is running out of space, as an linux administrator you have decided to attach another volume to the linux server. List down detailed steps and commands to solve this issue.

Answer: Since we have decided to add a new disk to the server, we will login to AWS console and from EC2 we will attach a new disk to the linux server 
We will check the existing mount point if it is a LVM partition as we can only extend LVM partition 
# df -Th # this command will display the type of partition.
Once verified that it is LVM use the following methods 

Format the partition so that it is of the type LVM 
# fdisk /dev/sdb 
create the disk of required size and toggle the partition to LVM use option 8e
Once the disk is formatted we will be able to see a partition add this to pv using pvcreate
# pvcreate /dev/sdb1
Add it to the volume group of the corresponding partition 
# vgextend <vgname> /dev/sdb1
Now extend the mounted partition 
# lvextend -L +50G /dev/vgname/lvname
Once this is done to make the changes visible use resize2fs command for ext3 and ext4 partition, if it is xfs use "xfs_growfs"
# resize2fs /dev/vgname/lvname

10. Suppose you are working as a Linux administrator in company and one of your client wants to install HTTP server with MySQL on Linux based system and also client wants whenever the server gets rebooted the service should be up automatically. List down the steps with required commands how will you achieve this.

Answer: 
To install Mysql and httpd packages we will run the below commands 
# yum install mysql mysql-server mysql-libs mysql-server  --- to install mysql server
# yum install httpd  -- to install http server 

To allow these services to start automatically when the server reboots we can enable the services 
# systemcl enable httpd.service 
# systemctl enable mysql ---- or the other method is 
# chkconfig --levels 235 mysqld on

11. Suppose you are working as a AWS Linux admin in a company and your have a database server in a private subnet so your manager asked you to launch a bastion server on AWS and allow all developers to access the database so list down the steps you will take to implement this solution.
Answer: 

The following example configuration is for an Amazon RDS for MySQL instance that is in an Amazon Virtual Private Cloud (Amazon VPC). The instance has security groups set up for an EC2 instance.

Launch and configure the EC2 instance

Open the Amazon EC2 console, and choose Launch instance.
Select an Amazon Machine Image (AMI).
Choose an instance type, and then choose Next: Configure Instance Details.
For Network, choose the VPC that the RDS DB instance uses.
For Subnet, select the subnet that has an internet gateway in its routing table. If you don't already have an internet gateway, you can add it to the subnet after the EC2 instance is created.
Choose Next: Add Storage, and modify storage as needed.
Choose Next: Add Tags, and add tags as needed.
Choose Next: Configure Security Group, choose Add Rule, and enter the following:
Type: Custom TCP Rule
Protocol: TCP
Port Range: 22
Source: Enter the IP address of your local machine. By default, the source IP address is open to all. But you can restrict access to your local public IP address only.
Choose Review and Launch.
Choose Launch.
Configure the RDS DB instance's security groups

Open the Amazon RDS console, and choose Databases from the navigation pane.
Choose the name of the RDS DB instance. Or create an RDS DB instance, if you don't already have one.
Choose the Connectivity & security tab.
From the Security section, choose the link under VPC security groups.
Select the security group, choose Actions, and choose Edit inbound rules.
Choose Add rule and enter the following:
Type: Custom TCP Rule
Protocol: TCP
Port Range: Enter the port of your RDS DB instance
Source: Enter the private IP address of your EC2 instance
Choose Save.
This configuration for the security group allows traffic from the EC2 instance's private IP address. If the EC2 instance and the RDS DB instance use the same VPC, then you don't need to modify the RDS DB instance's route table. If the VPC is different, then create a VPC peering connection to allow connections between those VPCs.

Connect to the RDS DB instance from your local machine

Depending on the client that you use, the steps for connecting to the RDS DB instance vary. For more information, see Connecting to an Amazon RDS DB instance. If you use MySQL, it's a best practice to use SSL to encrypt the connection between the client application and Amazon RDS.

The following example uses the MySQL Workbench client to connect to the bastion host:

Start a new connection, and select Standard TCP/IP over SSH for the Connection Method.
Enter the following details about the EC2 instance for the SSH settings:
SSH Hostname: Enter the public DNS name of the EC2 instance.
SSH Username: Enter the user name for your EC2 instance. For example, "ec2-user" is the user name for EC2 Linux machines.
SSH Key File: Select the private key that was used when the EC2 instance was created.
Enter the following details for the MySQL instance settings:
MySQL Hostname: Enter the RDS DB instance endpoint
MySQL Server port: Enter 3306 (or the custom port that you use).
Username: Enter the master user name of the RDS DB instance.
Password: Enter the master password of the RDS DB instance.
Choose Test Connection.


12. Considering above scenario you have installed the MySQL DB on Linux server, After few days some data get inserted into the database and your manager asked you to replicate same database for testing purpose so in this case you have to take a DB backup and restore it on another server so list down the steps with commands how will you do it.
Answer: 

We will be uing the default method of backup and restore in mysql DB 
To take backup of all the existing Databases we will use the following dump command 
# mysqldump --all-databases --single-transaction --quick --lock-tables=false > full-backup.sql -u root -p
this is to take backup of all the databases available 
If we want to take backup of specific DB we can use the following method 
# mysqldump -u [user] -p [database_name] > [filename].sql

This will create a dump file with the contents of a DB. Now create another server with similar configuration and install mysql on it 
Now create a database with same name as on the other server 

Login to mysql and create a new database as root user 
# mysql
# create database <DB name>
Use the following command to restore the other Database (copy the dump file to the new server) run 

#mysql -u [user] -p [database_name] < [filename].sql
